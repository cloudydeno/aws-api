// Autogenerated API structures for: Amazon Kinesis

import * as cmnP from "../../encoding/common.ts";

// refs: 1 - tags: named, input
export interface AddTagsToStreamInput {
  StreamName?: string | null;
  Tags: { [key: string]: string | null | undefined };
  StreamARN?: string | null;
}

// refs: 1 - tags: named, input
export interface CreateStreamInput {
  StreamName: string;
  ShardCount?: number | null;
  StreamModeDetails?: StreamModeDetails | null;
}

// refs: 1 - tags: named, input
export interface DecreaseStreamRetentionPeriodInput {
  StreamName?: string | null;
  RetentionPeriodHours: number;
  StreamARN?: string | null;
}

// refs: 1 - tags: named, input
export interface DeleteResourcePolicyInput {
  ResourceARN: string;
}

// refs: 1 - tags: named, input
export interface DeleteStreamInput {
  StreamName?: string | null;
  EnforceConsumerDeletion?: boolean | null;
  StreamARN?: string | null;
}

// refs: 1 - tags: named, input
export interface DeregisterStreamConsumerInput {
  StreamARN?: string | null;
  ConsumerName?: string | null;
  ConsumerARN?: string | null;
}

// refs: 1 - tags: named, input
export interface DescribeStreamInput {
  StreamName?: string | null;
  Limit?: number | null;
  ExclusiveStartShardId?: string | null;
  StreamARN?: string | null;
}

// refs: 1 - tags: named, input
export interface DescribeStreamConsumerInput {
  StreamARN?: string | null;
  ConsumerName?: string | null;
  ConsumerARN?: string | null;
}

// refs: 1 - tags: named, input
export interface DescribeStreamSummaryInput {
  StreamName?: string | null;
  StreamARN?: string | null;
}

// refs: 1 - tags: named, input
export interface DisableEnhancedMonitoringInput {
  StreamName?: string | null;
  ShardLevelMetrics: MetricsName[];
  StreamARN?: string | null;
}

// refs: 1 - tags: named, input
export interface EnableEnhancedMonitoringInput {
  StreamName?: string | null;
  ShardLevelMetrics: MetricsName[];
  StreamARN?: string | null;
}

// refs: 1 - tags: named, input
export interface GetRecordsInput {
  ShardIterator: string;
  Limit?: number | null;
  StreamARN?: string | null;
}

// refs: 1 - tags: named, input
export interface GetResourcePolicyInput {
  ResourceARN: string;
}

// refs: 1 - tags: named, input
export interface GetShardIteratorInput {
  StreamName?: string | null;
  ShardId: string;
  ShardIteratorType: ShardIteratorType;
  StartingSequenceNumber?: string | null;
  Timestamp?: Date | number | null;
  StreamARN?: string | null;
}

// refs: 1 - tags: named, input
export interface IncreaseStreamRetentionPeriodInput {
  StreamName?: string | null;
  RetentionPeriodHours: number;
  StreamARN?: string | null;
}

// refs: 1 - tags: named, input
export interface ListShardsInput {
  StreamName?: string | null;
  NextToken?: string | null;
  ExclusiveStartShardId?: string | null;
  MaxResults?: number | null;
  StreamCreationTimestamp?: Date | number | null;
  ShardFilter?: ShardFilter | null;
  StreamARN?: string | null;
}

// refs: 1 - tags: named, input
export interface ListStreamConsumersInput {
  StreamARN: string;
  NextToken?: string | null;
  MaxResults?: number | null;
  StreamCreationTimestamp?: Date | number | null;
}

// refs: 1 - tags: named, input
export interface ListStreamsInput {
  Limit?: number | null;
  ExclusiveStartStreamName?: string | null;
  NextToken?: string | null;
}

// refs: 1 - tags: named, input
export interface ListTagsForStreamInput {
  StreamName?: string | null;
  ExclusiveStartTagKey?: string | null;
  Limit?: number | null;
  StreamARN?: string | null;
}

// refs: 1 - tags: named, input
export interface MergeShardsInput {
  StreamName?: string | null;
  ShardToMerge: string;
  AdjacentShardToMerge: string;
  StreamARN?: string | null;
}

// refs: 1 - tags: named, input
export interface PutRecordInput {
  StreamName?: string | null;
  Data: Uint8Array | string;
  PartitionKey: string;
  ExplicitHashKey?: string | null;
  SequenceNumberForOrdering?: string | null;
  StreamARN?: string | null;
}

// refs: 1 - tags: named, input
export interface PutRecordsInput {
  Records: PutRecordsRequestEntry[];
  StreamName?: string | null;
  StreamARN?: string | null;
}

// refs: 1 - tags: named, input
export interface PutResourcePolicyInput {
  ResourceARN: string;
  Policy: string;
}

// refs: 1 - tags: named, input
export interface RegisterStreamConsumerInput {
  StreamARN: string;
  ConsumerName: string;
}

// refs: 1 - tags: named, input
export interface RemoveTagsFromStreamInput {
  StreamName?: string | null;
  TagKeys: string[];
  StreamARN?: string | null;
}

// refs: 1 - tags: named, input
export interface SplitShardInput {
  StreamName?: string | null;
  ShardToSplit: string;
  NewStartingHashKey: string;
  StreamARN?: string | null;
}

// refs: 1 - tags: named, input
export interface StartStreamEncryptionInput {
  StreamName?: string | null;
  EncryptionType: EncryptionType;
  KeyId: string;
  StreamARN?: string | null;
}

// refs: 1 - tags: named, input
export interface StopStreamEncryptionInput {
  StreamName?: string | null;
  EncryptionType: EncryptionType;
  KeyId: string;
  StreamARN?: string | null;
}

// refs: 1 - tags: named, input
export interface UpdateShardCountInput {
  StreamName?: string | null;
  TargetShardCount: number;
  ScalingType: ScalingType;
  StreamARN?: string | null;
}

// refs: 1 - tags: named, input
export interface UpdateStreamModeInput {
  StreamARN: string;
  StreamModeDetails: StreamModeDetails;
}

// refs: 1 - tags: named, output
export interface DescribeLimitsOutput {
  ShardLimit: number;
  OpenShardCount: number;
  OnDemandStreamCount: number;
  OnDemandStreamCountLimit: number;
}

// refs: 1 - tags: named, output
export interface DescribeStreamOutput {
  StreamDescription: StreamDescription;
}

// refs: 1 - tags: named, output
export interface DescribeStreamConsumerOutput {
  ConsumerDescription: ConsumerDescription;
}

// refs: 1 - tags: named, output
export interface DescribeStreamSummaryOutput {
  StreamDescriptionSummary: StreamDescriptionSummary;
}

// refs: 1 - tags: named, output
export interface EnhancedMonitoringOutput {
  StreamName?: string | null;
  CurrentShardLevelMetrics?: MetricsName[] | null;
  DesiredShardLevelMetrics?: MetricsName[] | null;
  StreamARN?: string | null;
}

// refs: 1 - tags: named, output
export interface GetRecordsOutput {
  Records: Record[];
  NextShardIterator?: string | null;
  MillisBehindLatest?: number | null;
  ChildShards?: ChildShard[] | null;
}

// refs: 1 - tags: named, output
export interface GetResourcePolicyOutput {
  Policy: string;
}

// refs: 1 - tags: named, output
export interface GetShardIteratorOutput {
  ShardIterator?: string | null;
}

// refs: 1 - tags: named, output
export interface ListShardsOutput {
  Shards?: Shard[] | null;
  NextToken?: string | null;
}

// refs: 1 - tags: named, output
export interface ListStreamConsumersOutput {
  Consumers?: Consumer[] | null;
  NextToken?: string | null;
}

// refs: 1 - tags: named, output
export interface ListStreamsOutput {
  StreamNames: string[];
  HasMoreStreams: boolean;
  NextToken?: string | null;
  StreamSummaries?: StreamSummary[] | null;
}

// refs: 1 - tags: named, output
export interface ListTagsForStreamOutput {
  Tags: Tag[];
  HasMoreTags: boolean;
}

// refs: 1 - tags: named, output
export interface PutRecordOutput {
  ShardId: string;
  SequenceNumber: string;
  EncryptionType?: EncryptionType | null;
}

// refs: 1 - tags: named, output
export interface PutRecordsOutput {
  FailedRecordCount?: number | null;
  Records: PutRecordsResultEntry[];
  EncryptionType?: EncryptionType | null;
}

// refs: 1 - tags: named, output
export interface RegisterStreamConsumerOutput {
  Consumer: Consumer;
}

// refs: 1 - tags: named, output
export interface UpdateShardCountOutput {
  StreamName?: string | null;
  CurrentShardCount?: number | null;
  TargetShardCount?: number | null;
  StreamARN?: string | null;
}

// refs: 5 - tags: input, named, interface, output
export interface StreamModeDetails {
  StreamMode: StreamMode;
}

// refs: 5 - tags: input, named, enum, output
export type StreamMode =
| "PROVISIONED"
| "ON_DEMAND"
| cmnP.UnexpectedEnumValue;

// refs: 6 - tags: input, named, enum, output
export type MetricsName =
| "IncomingBytes"
| "IncomingRecords"
| "OutgoingBytes"
| "OutgoingRecords"
| "WriteProvisionedThroughputExceeded"
| "ReadProvisionedThroughputExceeded"
| "IteratorAgeMilliseconds"
| "ALL"
| cmnP.UnexpectedEnumValue;

// refs: 1 - tags: input, named, enum
export type ShardIteratorType =
| "AT_SEQUENCE_NUMBER"
| "AFTER_SEQUENCE_NUMBER"
| "TRIM_HORIZON"
| "LATEST"
| "AT_TIMESTAMP"
| cmnP.UnexpectedEnumValue;

// refs: 1 - tags: input, named, interface
export interface ShardFilter {
  Type: ShardFilterType;
  ShardId?: string | null;
  Timestamp?: Date | number | null;
}

// refs: 1 - tags: input, named, enum
export type ShardFilterType =
| "AFTER_SHARD_ID"
| "AT_TRIM_HORIZON"
| "FROM_TRIM_HORIZON"
| "AT_LATEST"
| "AT_TIMESTAMP"
| "FROM_TIMESTAMP"
| cmnP.UnexpectedEnumValue;

// refs: 1 - tags: input, named, interface
export interface PutRecordsRequestEntry {
  Data: Uint8Array | string;
  ExplicitHashKey?: string | null;
  PartitionKey: string;
}

// refs: 7 - tags: input, named, enum, output
export type EncryptionType =
| "NONE"
| "KMS"
| cmnP.UnexpectedEnumValue;

// refs: 1 - tags: input, named, enum
export type ScalingType =
| "UNIFORM_SCALING"
| cmnP.UnexpectedEnumValue;

// refs: 1 - tags: output, named, interface
export interface StreamDescription {
  StreamName: string;
  StreamARN: string;
  StreamStatus: StreamStatus;
  StreamModeDetails?: StreamModeDetails | null;
  Shards: Shard[];
  HasMoreShards: boolean;
  RetentionPeriodHours: number;
  StreamCreationTimestamp: Date | number;
  EnhancedMonitoring: EnhancedMetrics[];
  EncryptionType?: EncryptionType | null;
  KeyId?: string | null;
}

// refs: 3 - tags: output, named, enum
export type StreamStatus =
| "CREATING"
| "DELETING"
| "ACTIVE"
| "UPDATING"
| cmnP.UnexpectedEnumValue;

// refs: 2 - tags: output, named, interface
export interface Shard {
  ShardId: string;
  ParentShardId?: string | null;
  AdjacentParentShardId?: string | null;
  HashKeyRange: HashKeyRange;
  SequenceNumberRange: SequenceNumberRange;
}

// refs: 3 - tags: output, named, interface
export interface HashKeyRange {
  StartingHashKey: string;
  EndingHashKey: string;
}

// refs: 2 - tags: output, named, interface
export interface SequenceNumberRange {
  StartingSequenceNumber: string;
  EndingSequenceNumber?: string | null;
}

// refs: 2 - tags: output, named, interface
export interface EnhancedMetrics {
  ShardLevelMetrics?: MetricsName[] | null;
}

// refs: 1 - tags: output, named, interface
export interface ConsumerDescription {
  ConsumerName: string;
  ConsumerARN: string;
  ConsumerStatus: ConsumerStatus;
  ConsumerCreationTimestamp: Date | number;
  StreamARN: string;
}

// refs: 3 - tags: output, named, enum
export type ConsumerStatus =
| "CREATING"
| "DELETING"
| "ACTIVE"
| cmnP.UnexpectedEnumValue;

// refs: 1 - tags: output, named, interface
export interface StreamDescriptionSummary {
  StreamName: string;
  StreamARN: string;
  StreamStatus: StreamStatus;
  StreamModeDetails?: StreamModeDetails | null;
  RetentionPeriodHours: number;
  StreamCreationTimestamp: Date | number;
  EnhancedMonitoring: EnhancedMetrics[];
  EncryptionType?: EncryptionType | null;
  KeyId?: string | null;
  OpenShardCount: number;
  ConsumerCount?: number | null;
}

// refs: 1 - tags: output, named, interface
export interface Record {
  SequenceNumber: string;
  ApproximateArrivalTimestamp?: Date | number | null;
  Data: Uint8Array;
  PartitionKey: string;
  EncryptionType?: EncryptionType | null;
}

// refs: 1 - tags: output, named, interface
export interface ChildShard {
  ShardId: string;
  ParentShards: string[];
  HashKeyRange: HashKeyRange;
}

// refs: 2 - tags: output, named, interface
export interface Consumer {
  ConsumerName: string;
  ConsumerARN: string;
  ConsumerStatus: ConsumerStatus;
  ConsumerCreationTimestamp: Date | number;
}

// refs: 1 - tags: output, named, interface
export interface StreamSummary {
  StreamName: string;
  StreamARN: string;
  StreamStatus: StreamStatus;
  StreamModeDetails?: StreamModeDetails | null;
  StreamCreationTimestamp?: Date | number | null;
}

// refs: 1 - tags: output, named, interface
export interface Tag {
  Key: string;
  Value?: string | null;
}

// refs: 1 - tags: output, named, interface
export interface PutRecordsResultEntry {
  SequenceNumber?: string | null;
  ShardId?: string | null;
  ErrorCode?: string | null;
  ErrorMessage?: string | null;
}
